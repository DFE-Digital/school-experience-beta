// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolExperienceData;

namespace SchoolExperienceData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180917090048_AddSchoolDiary")]
    partial class AddSchoolDiary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolExperienceData.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("SchoolExperienceData.Entities.CandidateDiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CandidateId");

                    b.Property<int>("EntryType");

                    b.Property<string>("SchoolId");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("SchoolId");

                    b.ToTable("CandidateDiarys");
                });

            modelBuilder.Entity("SchoolExperienceData.Entities.School", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("SchoolExperienceData.Entities.SchoolDiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateDiaryId");

                    b.Property<string>("SchoolId");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.HasIndex("CandidateDiaryId");

                    b.HasIndex("SchoolId");

                    b.ToTable("SchoolDiary");
                });

            modelBuilder.Entity("SchoolExperienceData.Entities.CandidateDiary", b =>
                {
                    b.HasOne("SchoolExperienceData.Entities.Candidate", "Candidate")
                        .WithMany("Events")
                        .HasForeignKey("CandidateId");

                    b.HasOne("SchoolExperienceData.Entities.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("SchoolExperienceData.Entities.SchoolDiary", b =>
                {
                    b.HasOne("SchoolExperienceData.Entities.CandidateDiary", "CandidateDiary")
                        .WithMany()
                        .HasForeignKey("CandidateDiaryId");

                    b.HasOne("SchoolExperienceData.Entities.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");
                });
#pragma warning restore 612, 618
        }
    }
}
